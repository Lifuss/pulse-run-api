{
  "openapi": "3.0.2",
  "info": {
    "title": "Pulse&Run API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://pulse-run-api.onrender.com/api"
    },
    {
      "url": "http://localhost:3020/api"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "authentication"
    },
    {
      "name": "User",
      "description": "user management"
    },
    {
      "name": "Products",
      "description": "product management"
    }
  ],
  "paths": {
    "/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "password"],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "example@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "paSsword123",
                    "description": "Must contain at least one uppercase letter (?=.*[A-Z]) one lowercase letter (?=.*[a-z]) between 8 and 16 characters in length [A-Za-z\\d]{8,16} Only allows alphanumeric characters [A-Za-z\\d]"
                  }
                }
              }
            }
          }
        },

        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "description": "Bad Request (Invalid password)"
          },
          "404": {
            "description": "Not Found (User not found)"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "password", "firstName", "lastName"],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "example@gamil.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "paSsword123",
                    "description": "Must contain at least one uppercase letter (?=.*[A-Z]) one lowercase letter (?=.*[a-z]) between 8 and 16 characters in length [A-Za-z\\d]{8,16} Only allows alphanumeric characters [A-Za-z\\d]"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Bad Request (User already exists)"
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Login with Google",
        "responses": {
          "302": {
            "description": "Redirect to Google login page. After successful login, user will be redirected to the frontend app with token in the URL. Example('https://example.com?token={token}')"
          }
        }
      }
    },
    "/auth/facebook": {
      "get": {
        "tags": ["Auth"],
        "summary": "Login with Facebook",
        "responses": {
          "302": {
            "description": "Redirect to Facebook login page. After successful login, user will be redirected to the frontend app with token in the URL. Example('https://example.com?token={token}')"
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "responses": {
          "200": {
            "description": "Success ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Signout success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized (Invalid or expired token)"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "description": "paginated, filtered by category(separate by comma without spaces), brand, color, size, season and sort by price, date), all this is not required, if not provided, it will return all products from 1 page and 15 limit",

        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 15
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["price", "createdAt"],
              "default": "createdAt"
            },
            "description": "sort by price or created date"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            },
            "description": "asc for ascending, desc for descending"
          },
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Nike"
            }
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Червоний,Синій"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "example": 40
            }
          },
          {
            "name": "season",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["Зима", "Літо", "Весна/Осінь"]
            }
          },
          {
            "name": "sex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["Чоловік", "Жінка"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": { "type": "number", "example": 1 },
                    "limit": { "type": "number", "example": 15 },
                    "totalPages": { "type": "number", "example": 5 },
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "description": "Bad Request (Invalid limit or page parameters)"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "description": "Not Found (Product not found)"
          }
        }
      }
    },
    "/products/categories": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all categories",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "seasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Winter"
                      }
                    },
                    "sex": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "male"
                      }
                    },
                    "brands": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Nike"
                      }
                    },
                    "colors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Red"
                      }
                    },
                    "sizes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": 40
                      }
                    }
                  }
                }
              }
            },
            "description": "Success"
          }
        }
      }
    },
    "/products/newest": {
      "get": {
        "tags": ["Products"],
        "summary": "Get the newest products",
        "description": "Get the newest products, all filters(separate by comma without spaces) are optional if not provided, it will return all products from 1 page and 15 limit and sort by created date",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 15
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["price", "createdAt"],
              "default": "createdAt"
            },
            "description": "sort by price or created date "
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            },
            "description": "asc for ascending, desc for descending"
          },
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Nike"
            }
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Червоний,Синій"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "example": 40
            }
          },
          {
            "name": "season",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["Зима", "Літо", "Весна/Осінь"]
            }
          },
          {
            "name": "sex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["Чоловік", "Жінка"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            },
            "description": "Success"
          }
        }
      }
    },
    "/products/sales": {
      "get": {
        "tags": ["Products"],
        "summary": "Get products on sale",
        "description": "Get products on sale (sale greater than 0) all filters(separate by comma without spaces) are optional if not provided, it will return all products from 1 page and 15 limit and sort ascending by price",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 15
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["price", "createdAt"],
              "default": "price"
            },
            "description": "sort by price or created date "
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "asc"
            },
            "description": "asc for ascending, desc for descending"
          },
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Nike"
            }
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Червоний,Синій"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "example": 40
            }
          },
          {
            "name": "season",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["Зима", "Літо", "Весна/Осінь"]
            }
          },
          {
            "name": "sex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["Чоловік", "Жінка"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            },
            "description": "Success"
          }
        }
      }
    },
    "/products/search": {
      "get": {
        "tags": ["Products"],
        "summary": "Search products by name",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": { "type": "number", "example": 1 },
                    "limit": { "type": "number", "example": 15 },
                    "totalPages": { "type": "number", "example": 5 },
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "description": "Bad Request (name is required)"
          }
        }
      }
    },
    "/products/create": {
      "post": {
        "tags": ["Products"],
        "summary": "Create a product",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "name",
                  "description",
                  "price",
                  "category",
                  "brand",
                  "color",
                  "size",
                  "season",
                  "image",
                  "features[0]",
                  "sex",
                  "imgThumbnail",
                  "imgGallery"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "sale": { "type": "number" },
                  "category": {
                    "type": "string"
                  },
                  "features[0]": {
                    "type": "string"
                  },
                  "features[1]": {
                    "type": "string"
                  },
                  "features[2]": {
                    "type": "string"
                  },
                  "brand": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "size[0]": {
                    "type": "number"
                  },
                  "size[1]": {
                    "type": "number"
                  },
                  "season": {
                    "type": "string"
                  },
                  "sex": {
                    "type": "string"
                  },
                  "imgThumbnail": {
                    "type": "string",
                    "format": "binary"
                  },
                  "imgGallery": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user",
        "description": "accept one or more fields to update user profile. Example: firstName, lastName, phone, password, email, avatar",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (No data to update)"
          },
          "409": {
            "description": "Conflict (Email already exists)"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user",
        "responses": {
          "204": { "description": "Delete success" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/subscribe": {
      "post": {
        "tags": ["User"],
        "summary": "Subscribe to newsletter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email"],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Subscribed successfully"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict (User already subscribed)"
          }
        }
      }
    },
    "/users/payments": {
      "post": {
        "tags": ["User"],
        "summary": "Add new payment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["cardNumber", "cardName", "cardDate", "cardCVC"],
                "type": "object",
                "properties": {
                  "cardNumber": {
                    "type": "string",
                    "example": "4111111111111113"
                  },
                  "cardName": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "cardDate": {
                    "type": "string",
                    "example": "2024-12"
                  },
                  "cardCVC": {
                    "type": "string",
                    "example": "123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Payment added successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (User not found)"
          },
          "409": {
            "description": "Conflict (Card already exists)"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/payments/{paymentId}": {
      "delete": {
        "tags": ["User"],
        "summary": "Delete payment",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65de225d1777648afb13c3b4"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found (Card not found)"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/supports": {
      "post": {
        "tags": ["User"],
        "summary": "Send support message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "message"],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Лірой Дженкінс"
                  },
                  "email": {
                    "type": "string",
                    "example": "example@gmail.com "
                  },
                  "subject": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Support ticket created successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/forgot-password": {
      "post": {
        "tags": ["User"],
        "summary": "Forgot password",
        "description": "Send reset password email to user's email address and email contains link with reset token. Example: http://example.com/reset-password?resetToken=${resetToken}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email"],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Reset password email has been sent. Check your email"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (User not found)"
          }
        }
      }
    },
    "/users/favorites": {
      "patch": {
        "tags": ["User"],
        "summary": "Add product to favorites",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["productId"],
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string",
                    "example": "65de225d1777648afb13c3b4"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "65de225d1777648afb13c3b4"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict (Product already in favorites)"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["User"],
        "summary": "Remove product from favorites",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["productId"],
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string",
                    "example": "65de225d1777648afb13c3b4"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "65de225d1777648afb13c3b4"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (Product not found in favorites)"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/reset-password": {
      "patch": {
        "tags": ["User"],
        "summary": "Reset password",
        "parameters": [
          {
            "name": "resetToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65de225d1777648afb13c3b4"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["password", "token"],
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password reset successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Invalid or expired token)"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "avatar": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          },
          "favoriteProducts": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "65de225d1777648afb13c3b4"
            }
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "example": 1250
          },
          "sale": {
            "type": "number",
            "description": "0 as no sale, more than 0 is as percent from full price"
          },
          "category": {
            "type": "string"
          },
          "imgThumbnail": {
            "type": "string",
            "example": "https://example.com/image.jpg"
          },
          "imgGallery": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "https://example.com/image.jpg"
            }
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "categories": {
            "type": "object",
            "properties": {
              "sex": { "type": "string", "example": "male" },
              "seasons": {
                "type": "string",
                "example": "winter"
              },
              "brands": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "65de225d1777648afb13c3b4"
                  },
                  "brand": { "type": "string", "example": "Nike" }
                }
              },
              "colors": {
                "type": "array",
                "items": {
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "65de225d1777648afb13c3b4"
                    },
                    "color": { "type": "string", "example": "red" }
                  }
                }
              },
              "sizes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "65de225d1777648afb13c3b4"
                    },
                    "size": { "type": "number", "example": 40 }
                  }
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-01-01T00:00:00.000Z"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
